;; Auto-generated. Do not edit!


(when (boundp 'sagittarius_object_color_detector::SGRCtrlResult)
  (if (not (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR"))
    (make-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR"))
  (shadow 'SGRCtrlResult (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR")))
(unless (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT")
  (make-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))

(in-package "ROS")
;;//! \htmlinclude SGRCtrlResult.msg.html


(intern "*SUCCESS*" (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(shadow '*SUCCESS* (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(defconstant sagittarius_object_color_detector::SGRCtrlResult::*SUCCESS* 0)
(intern "*ERROR*" (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(shadow '*ERROR* (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(defconstant sagittarius_object_color_detector::SGRCtrlResult::*ERROR* 1)
(intern "*PREEMPT*" (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(shadow '*PREEMPT* (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(defconstant sagittarius_object_color_detector::SGRCtrlResult::*PREEMPT* 2)
(intern "*PLAN_NOT_FOUND*" (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(shadow '*PLAN_NOT_FOUND* (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(defconstant sagittarius_object_color_detector::SGRCtrlResult::*PLAN_NOT_FOUND* 3)
(intern "*GRASP_FAILD*" (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(shadow '*GRASP_FAILD* (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLRESULT"))
(defconstant sagittarius_object_color_detector::SGRCtrlResult::*GRASP_FAILD* 4)

(defun sagittarius_object_color_detector::SGRCtrlResult-to-symbol (const)
  (cond
        ((= const 0) 'sagittarius_object_color_detector::SGRCtrlResult::*SUCCESS*)
        ((= const 1) 'sagittarius_object_color_detector::SGRCtrlResult::*ERROR*)
        ((= const 2) 'sagittarius_object_color_detector::SGRCtrlResult::*PREEMPT*)
        ((= const 3) 'sagittarius_object_color_detector::SGRCtrlResult::*PLAN_NOT_FOUND*)
        ((= const 4) 'sagittarius_object_color_detector::SGRCtrlResult::*GRASP_FAILD*)
        (t nil)))

(defclass sagittarius_object_color_detector::SGRCtrlResult
  :super ros::object
  :slots (_result ))

(defmethod sagittarius_object_color_detector::SGRCtrlResult
  (:init
   (&key
    ((:result __result) 0)
    )
   (send-super :init)
   (setq _result (round __result))
   self)
  (:result
   (&optional __result)
   (if __result (setq _result __result)) _result)
  (:serialization-length
   ()
   (+
    ;; uint8 _result
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _result
       (write-byte _result s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _result
     (setq _result (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;;
   self)
  )

(setf (get sagittarius_object_color_detector::SGRCtrlResult :md5sum-) "6cd16eb95067452fc55413e9ecaf8f88")
(setf (get sagittarius_object_color_detector::SGRCtrlResult :datatype-) "sagittarius_object_color_detector/SGRCtrlResult")
(setf (get sagittarius_object_color_detector::SGRCtrlResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the result
uint8 SUCCESS = 0
uint8 ERROR = 1
uint8 PREEMPT = 2
uint8 PLAN_NOT_FOUND = 3
uint8 GRASP_FAILD = 4 # 抓空

# 执行结果
uint8 result


")



(provide :sagittarius_object_color_detector/SGRCtrlResult "6cd16eb95067452fc55413e9ecaf8f88")


