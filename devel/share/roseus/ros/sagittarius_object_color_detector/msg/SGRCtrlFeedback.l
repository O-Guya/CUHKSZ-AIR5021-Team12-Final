;; Auto-generated. Do not edit!


(when (boundp 'sagittarius_object_color_detector::SGRCtrlFeedback)
  (if (not (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR"))
    (make-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR"))
  (shadow 'SGRCtrlFeedback (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR")))
(unless (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLFEEDBACK")
  (make-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude SGRCtrlFeedback.msg.html


(intern "*PLANNING*" (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLFEEDBACK"))
(shadow '*PLANNING* (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLFEEDBACK"))
(defconstant sagittarius_object_color_detector::SGRCtrlFeedback::*PLANNING* 0)
(intern "*EXEC_POSITION*" (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLFEEDBACK"))
(shadow '*EXEC_POSITION* (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLFEEDBACK"))
(defconstant sagittarius_object_color_detector::SGRCtrlFeedback::*EXEC_POSITION* 1)
(intern "*EXEC_GRASP*" (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLFEEDBACK"))
(shadow '*EXEC_GRASP* (find-package "SAGITTARIUS_OBJECT_COLOR_DETECTOR::SGRCTRLFEEDBACK"))
(defconstant sagittarius_object_color_detector::SGRCtrlFeedback::*EXEC_GRASP* 2)

(defun sagittarius_object_color_detector::SGRCtrlFeedback-to-symbol (const)
  (cond
        ((= const 0) 'sagittarius_object_color_detector::SGRCtrlFeedback::*PLANNING*)
        ((= const 1) 'sagittarius_object_color_detector::SGRCtrlFeedback::*EXEC_POSITION*)
        ((= const 2) 'sagittarius_object_color_detector::SGRCtrlFeedback::*EXEC_GRASP*)
        (t nil)))

(defclass sagittarius_object_color_detector::SGRCtrlFeedback
  :super ros::object
  :slots (_step ))

(defmethod sagittarius_object_color_detector::SGRCtrlFeedback
  (:init
   (&key
    ((:step __step) 0)
    )
   (send-super :init)
   (setq _step (round __step))
   self)
  (:step
   (&optional __step)
   (if __step (setq _step __step)) _step)
  (:serialization-length
   ()
   (+
    ;; uint8 _step
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _step
       (write-byte _step s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _step
     (setq _step (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;;
   self)
  )

(setf (get sagittarius_object_color_detector::SGRCtrlFeedback :md5sum-) "16415215c939077a0b815877705c9bee")
(setf (get sagittarius_object_color_detector::SGRCtrlFeedback :datatype-) "sagittarius_object_color_detector/SGRCtrlFeedback")
(setf (get sagittarius_object_color_detector::SGRCtrlFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
uint8 PLANNING = 0
uint8 EXEC_POSITION = 1
uint8 EXEC_GRASP = 2

# 当前步骤
uint8 step

")



(provide :sagittarius_object_color_detector/SGRCtrlFeedback "16415215c939077a0b815877705c9bee")


